<?xml version="1.0" encoding="utf-8" ?>
<unity:PrismApplication xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:unity="http://prismlibrary.com"
             xmlns:converters="clr-namespace:SeriesStats.Converters;assembly=SeriesStats"
             xmlns:abstractions="clr-namespace:SegmentedControl.FormsPlugin.Abstractions;assembly=SegmentedControl.FormsPlugin.Abstractions"
             xmlns:controls="clr-namespace:Plugin.InputKit.Shared.Controls;assembly=Plugin.InputKit"
             xmlns:pancakeView="clr-namespace:Xamarin.Forms.PancakeView;assembly=Xamarin.Forms.PancakeView"
             xmlns:renderedViews="clr-namespace:Sharpnado.Presentation.Forms.RenderedViews;assembly=Sharpnado.Presentation.Forms"
             mc:Ignorable="d"
             x:Class="SeriesStats.App">
    <Application.Resources>
        <ResourceDictionary>
            
            <x:Int32 x:Key="CardElevation">5</x:Int32>
            <CornerRadius x:Key="CardCornerRadius">10</CornerRadius>
            
            <Color x:Key="PrimaryColor">#0A84FF</Color>
            <Color x:Key="AccentColor">#FFD60A</Color>
            <Color x:Key="WindowBackgroundColor">#e6e6e6</Color>
            <Color x:Key="CardBackgroundColor">#f1f1f1</Color>
            <Color x:Key="BadgeBackgroundColor">Gray</Color>
            <Color x:Key="BadgeForegroundColor">White</Color>
            <Color x:Key="ToolbarBackgroundColor">#0A84FF</Color>

            <Color x:Key="LabelColor">#1E2222</Color>
            <Color x:Key="SubLabelColor">#555555</Color>

            <OnPlatform x:Key="ToolbarIconBackground" x:TypeArguments="Color">
                <On Platform="Android" Value="#ffffff" />
                <On Platform="iOS" Value="{StaticResource PrimaryColor}" />
            </OnPlatform>
            <OnPlatform x:Key="ToolbarColor" x:TypeArguments="Color">
                <On Platform="Android" Value="{StaticResource ToolbarBackgroundColor}" />
            </OnPlatform>
            <OnPlatform x:Key="ToolbarTextColor" x:TypeArguments="Color">
                <On Platform="Android" Value="White" />
                <On Platform="iOS" Value="{StaticResource LabelColor}" />
            </OnPlatform>

            
            <!-- Buttons -->
            <Style TargetType="abstractions:SegmentedControl">
                <Setter Property="SelectedTextColor" Value="{DynamicResource PrimaryColor}"/>
                <Setter Property="TintColor" Value="{StaticResource ToolbarIconBackground}"/>
            </Style>
    
            <Style TargetType="controls:CheckBox">
                <Setter Property="Color" Value="{DynamicResource PrimaryColor}"/>
                <Setter Property="TextColor" Value="{DynamicResource LabelColor}"/>
            </Style>
    
            <Style TargetType="controls:RadioButton">
                <Setter Property="Color" Value="{DynamicResource PrimaryColor}"/>
                <Setter Property="TextColor" Value="{DynamicResource LabelColor}"/>
            </Style>
            
            <!-- Fonts -->
            
            <OnPlatform x:Key="MaterialFontFamily" x:TypeArguments="x:String">
                <On Platform="iOS" Value="Material Design Icons" />
                <On Platform="Android" Value="materialdesignicons-webfont.ttf#Material Design Icons" />
            </OnPlatform>

            <OnPlatform x:Key="RegularFont" x:TypeArguments="x:String">
                <On Platform="Android" Value="Roboto-Regular.ttf#Roboto" />
                <On Platform="iOS" Value="Roboto-Regular" />
            </OnPlatform>
            <OnPlatform x:Key="BlackFont" x:TypeArguments="x:String">
                <On Platform="Android" Value="Roboto-Black.ttf#Roboto Black" />
                <On Platform="iOS" Value="Roboto-Black" />
            </OnPlatform>

            <OnPlatform x:Key="ThinFont" x:TypeArguments="x:String">
                <On Platform="Android" Value="Roboto-Thin.ttf#Roboto Thin" />
                <On Platform="iOS" Value="Roboto-Thin" />
            </OnPlatform>

            <OnPlatform x:Key="BoldFont" x:TypeArguments="x:String">
                <On Platform="Android" Value="Roboto-Bold.ttf#Roboto Bold" />
                <On Platform="iOS" Value="Roboto-Bold" />
            </OnPlatform>


            <OnPlatform x:Key="LightFont" x:TypeArguments="x:String">
                <On Platform="Android" Value="Roboto-Light.ttf#Roboto Light" />
                <On Platform="iOS" Value="Roboto-Light" />
            </OnPlatform>
            
            <!-- Views -->
            
            <Style TargetType="pancakeView:PancakeView">
                <Setter Property="Elevation" Value="{StaticResource CardElevation}"/>
                <Setter Property="BackgroundColor" Value="{DynamicResource CardBackgroundColor}" />
                <Setter Property="CornerRadius" Value="{StaticResource CardCornerRadius}" />
            </Style>

            <Style TargetType="ContentPage">
                <Setter Property="BackgroundColor" Value="{DynamicResource WindowBackgroundColor}"/>
            </Style>
            <Style TargetType="ActivityIndicator">
                <Setter Property="Color" Value="{DynamicResource PrimaryColor}" />
            </Style>

            <Style TargetType="renderedViews:MaterialFrame">
                <Setter Property="MaterialTheme" Value="Acrylic"/>
                <Setter Property="Margin" Value="5,5,5,10"/>
                <Setter Property="Padding" Value="20, 15" />
                <Setter Property="CornerRadius" Value="10" />
                <Setter Property="LightThemeBackgroundColor" Value="{StaticResource CardBackgroundColor}" />
            </Style>

            <!-- Labels -->
            <Style TargetType="Label" x:Key="BaseLabel">
                <Setter Property="TextColor" Value="{DynamicResource LabelColor}"></Setter>
                <Setter Property="FontFamily" Value="{StaticResource RegularFont}"/>
            </Style>
            <Style TargetType="Label" BasedOn="{StaticResource BaseLabel}"></Style>
            
            <Style TargetType="Label" x:Key="CardHeaderLabel">
                <Setter Property="FontSize" Value="20" />
                <Setter Property="TextColor" Value="White" />
                <Setter Property="FontFamily" Value="{StaticResource BoldFont}" />
            </Style>
            <Style TargetType="Label" x:Key="HeaderLabel" BasedOn="{StaticResource BaseLabel}">
                <Setter Property="FontSize" Value="20" />
                <Setter Property="Margin" Value="20, 5, 0, 5"/>
                <Setter Property="FontFamily" Value="{StaticResource BlackFont}" />
                
            </Style>
            
            <Style TargetType="Label" x:Key="StatValueLabel" BasedOn="{StaticResource BaseLabel}">
                <Setter Property="FontSize" Value="30" />
                <Setter Property="FontFamily" Value="{StaticResource BlackFont}" />
                <Setter Property="HorizontalOptions" Value="Center" />
            </Style>
            <Style TargetType="Label" x:Key="StatNameLabel" BasedOn="{StaticResource BaseLabel}">
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FontFamily" Value="{StaticResource LightFont}" />
                <Setter Property="HorizontalOptions" Value="Center" />
            </Style>

            <!-- Picker -->
            <Style TargetType="Picker">
                <Setter Property="TextColor" Value="{DynamicResource LabelColor}"/>
                <Setter Property="FontFamily" Value="{StaticResource RegularFont}"/>
            </Style>

            <Style TargetType="Entry">
                <Setter Property="TextColor" Value="{DynamicResource LabelColor}"/>
                <Setter Property="FontFamily" Value="{StaticResource RegularFont}"/>
            </Style>
            <Style TargetType="SearchBar">
                <Setter Property="TextColor" Value="{DynamicResource LabelColor}"/>
                <Setter Property="FontFamily" Value="{StaticResource RegularFont}"/>
            </Style>

            <x:String x:Key="SearchIcon">
                &#xf349;
            </x:String>
            <x:String x:Key="CaretBackIcon">
                &#xf04d;
            </x:String>
            
            
            <!-- Converters -->
            <converters:AbsolutePathConverter x:Key="AbsolutePathConverter"/>
            <converters:ItemTappedEventArgsConverter x:Key="ItemTappedEventArgsConverter" />
            <converters:ValueChangedEventArgsConverter x:Key="ValueChangedEventArgsConverter" />
            <converters:NegationConverter x:Key="NegationConverter" />
            <converters:TimeConverter x:Key="TimeConverter" />
            <converters:IsNullConverter x:Key="IsNullConverter" />
            <converters:IsNotNullConverter x:Key="IsNotNullConverter" />
            <converters:DateConverter x:Key="DateConverter" />
            <converters:EqualityToBoolConverter x:Key="EqualityToBoolConverter" />

        </ResourceDictionary>
    </Application.Resources>
</unity:PrismApplication>