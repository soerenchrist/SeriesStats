<?xml version="1.0" encoding="utf-8"?>

<pages:PopupPage 
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:pages="clr-namespace:Rg.Plugins.Popup.Pages;assembly=Rg.Plugins.Popup"
    xmlns:animations="clr-namespace:Rg.Plugins.Popup.Animations;assembly=Rg.Plugins.Popup"
    xmlns:pancakeView="clr-namespace:Xamarin.Forms.PancakeView;assembly=Xamarin.Forms.PancakeView"
    xmlns:popups="clr-namespace:SeriesStats.ViewModels.Popups;assembly=SeriesStats"
    xmlns:segmented="clr-namespace:SegmentedControl.FormsPlugin.Abstractions;assembly=SegmentedControl.FormsPlugin.Abstractions"
    xmlns:behaviors="http://prismlibrary.com"
    xmlns:controls="clr-namespace:Plugin.InputKit.Shared.Controls;assembly=Plugin.InputKit"
    x:Class="SeriesStats.Views.Popups.FilterPopupPage"
    BackgroundColor="{DynamicResource WindowBackgroundColor}"
    x:DataType="popups:FilterPopupPageViewModel">
    <pages:PopupPage.Animation>
        <animations:ScaleAnimation 
            PositionIn="Center"
            PositionOut="Center"
            ScaleIn="1.2"
            ScaleOut="0.8"
            DurationIn="400"
            DurationOut="300"
            EasingIn="SinOut"
            EasingOut="SinIn"
            HasBackgroundAnimation="True"/>
    </pages:PopupPage.Animation>
    <pages:PopupPage.Content>
        <pancakeView:PancakeView
            Padding="10"
            VerticalOptions="Center"
            HorizontalOptions="Center"
            Elevation="0"
            BackgroundColor="{StaticResource WindowBackgroundColor}"
            CornerRadius="8"
            HeightRequest="300"
            WidthRequest="300">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <segmented:SegmentedControl 
                                            Margin="5"
                                            Grid.Row="0"
                                            WidthRequest="200">
                    <segmented:SegmentedControl.Behaviors>
                        <behaviors:EventToCommandBehavior EventName="ValueChanged"
                                                          EventArgsConverter="{StaticResource ValueChangedEventArgsConverter}"
                                                          Command="{Binding CurrentPageChangedCommand}" />
                    </segmented:SegmentedControl.Behaviors>
                    <segmented:SegmentedControl.Children>
                        <segmented:SegmentedControlOption Text="Sort" />
                        <segmented:SegmentedControlOption Text="Filter" />
                    </segmented:SegmentedControl.Children>
                </segmented:SegmentedControl>
                
                <StackLayout IsVisible="{Binding IsSort}"
                      Grid.Row="1">
                    <Label Text="Sort shows by"/>
                    <controls:RadioButtonGroupView>
                        <controls:RadioButton Text="By Name"
                                              IsChecked="{Binding SortOptions, Mode=TwoWay, Converter={StaticResource EqualityToBoolConverter}, ConverterParameter=ByName}"/>
                        <controls:RadioButton Text="By Last viewed"
                                              IsChecked="{Binding SortOptions, Mode=TwoWay, Converter={StaticResource EqualityToBoolConverter}, ConverterParameter=ByLastViewed}"/>
                        <controls:RadioButton Text="By newest episodes"
                                              IsChecked="{Binding SortOptions, Mode=TwoWay, Converter={StaticResource EqualityToBoolConverter}, ConverterParameter=ByNewest}"/>
                    </controls:RadioButtonGroupView>
                </StackLayout>
                <StackLayout IsVisible="{Binding IsFilter}"
                      Grid.Row="1">
                    <Label Text="Filter shows"/>
                    <controls:CheckBox Text="Only continued"
                                       IsChecked="{Binding FilterOptions.Continued}"/>
                    <controls:CheckBox Text="Shows with unviewed episodes"
                                       IsChecked="{Binding FilterOptions.NotViewed}"/>
                    <controls:CheckBox Text="Favorites"
                                       IsChecked="{Binding FilterOptions.Favorite}"/>

                </StackLayout>
            </Grid>
        </pancakeView:PancakeView>
    </pages:PopupPage.Content>
</pages:PopupPage>